[build-system]
requires = ["setuptools>=68", "setuptools_scm[toml]>=8", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "boxofports"
dynamic = ["version"]                 # ✅ setuptools-scm controls version
description = "SMS Gateway Management CLI for EJOIN Router Operators"
authors = [{ name = "Althea Signals Network LLC", email = "support@altheasignals.net" }]
maintainers = [{ name = "Althea Signals Network LLC", email = "support@altheasignals.net" }]
license = { text = "Proprietary" }
keywords = ["boxofports", "sms", "gateway", "ejoin", "router", "telecommunications"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "Intended Audience :: Telecommunications Industry",
  "License :: Other/Proprietary License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Communications",
  "Topic :: Communications :: Telephony",
  "Topic :: System :: Networking",
  "Topic :: System :: Systems Administration",
  "Topic :: Utilities",
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
  "typer>=0.9.0",
  "httpx>=0.25.0",
  "pydantic>=2.0.0",
  "rich>=13.0.0",
  "jinja2>=3.1.0",
  "python-dotenv>=1.0.0",
  "fastapi>=0.104.0",
  "uvicorn>=0.24.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.4.0",
  "pytest-asyncio>=0.21.0",
  "ruff>=0.1.0",
  "respx>=0.20.0",
  "mypy>=1.6.0",
]

[project.scripts]
boxofports = "boxofports.cli:app"     # ✅ matches your code

# (optional but helpful) ensure all subpackages are included
[tool.setuptools.packages.find]
where = ["."]
include = ["boxofports*"]

[tool.setuptools_scm]
tag_regex = "^v(?P<version>\\d+\\.\\d+\\.\\d+)$"
version_scheme = "no-guess-dev"
local_scheme = "node-and-date"
fallback_version = "0.0.0"
# write_to = "boxofports/_generated_version.py"
# write_to_template = "__version__ = \"{version}\"\n"

[tool.ruff]
# ❌ was "1.2.10" (your package version) — Ruff expects a *Python* target, e.g. py311 or py312
target-version = "py311"              # Choose the lowest you support; use "py312" if you want 3.12 features
line-length = 88
select = ["E","W","F","I","B","C4","UP"]
ignore = [
  "E501",  # line too long, handled by formatter
  "B008",  # function calls in defaults
  "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
# ❌ was "1.2.10" — mypy expects the Python language version, not your package version
python_version = "3.11"               # baseline; bump to "3.12" if you target 3.12-only features
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
