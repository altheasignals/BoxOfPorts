# BoxOfPorts Docker Compose Configuration
# Copyright (c) 2025 Althea Signals Network LLC. All rights reserved.

services:
  boxofports:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: boxofports-app
    hostname: boxofports
    restart: unless-stopped
    
    # Environment variables
    environment:
      # Gateway connection settings (override these)
      - EJOIN_HOST=${EJOIN_HOST:-192.168.1.100}
      - EJOIN_PORT=${EJOIN_PORT:-80}
      - EJOIN_USER=${EJOIN_USER:-admin}
      - EJOIN_PASSWORD=${EJOIN_PASSWORD:-admin}
      
      # Application settings
      - BOXOFPORTS_LOG_LEVEL=${BOXOFPORTS_LOG_LEVEL:-INFO}
      - BOXOFPORTS_DATA_DIR=/app/data
      - BOXOFPORTS_CONFIG_DIR=/app/config
      - BOXOFPORTS_TIMEOUT=${BOXOFPORTS_TIMEOUT:-30}
      - BOXOFPORTS_RETRIES=${BOXOFPORTS_RETRIES:-3}
      
      # Python settings
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    
    # Volume mounts for persistence
    volumes:
      # Configuration files (read-only)
      - ./config:/app/config:ro
      # Data persistence
      - boxofports_data:/app/data
      # Logs
      - boxofports_logs:/app/logs
    
    # Network configuration
    networks:
      - boxofports_network
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    
    # Health check
    healthcheck:
      test: ["CMD", "boxofports", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Default command (override as needed)
    command: ["--help"]
    
    # Security settings
    user: boxofports
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_ADMIN  # Only if needed for network operations

  # Optional: Web dashboard (future feature)
  boxofports-web:
    build:
      context: .
      dockerfile: Dockerfile
      target: web  # Future multi-stage build
    container_name: boxofports-web
    profiles:
      - web  # Only start with --profile web
    restart: unless-stopped
    ports:
      - "${WEB_PORT:-8080}:8080"
    depends_on:
      boxofports:
        condition: service_healthy
    networks:
      - boxofports_network
    environment:
      - BOXOFPORTS_WEB_HOST=0.0.0.0
      - BOXOFPORTS_WEB_PORT=8080
    volumes:
      - boxofports_data:/app/data:ro
      - boxofports_logs:/app/logs:ro

  # Optional: Database for advanced features (future)
  boxofports-db:
    image: postgres:15-alpine
    container_name: boxofports-db
    profiles:
      - database
    restart: unless-stopped
    environment:
      - POSTGRES_DB=boxofports
      - POSTGRES_USER=boxofports
      - POSTGRES_PASSWORD=${DB_PASSWORD:-secure_password}
    volumes:
      - boxofports_db_data:/var/lib/postgresql/data
    networks:
      - boxofports_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U boxofports"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  boxofports_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  boxofports_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  
  boxofports_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
  
  boxofports_db_data:
    driver: local
