name: Version Hygiene

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  version-hygiene:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed files
        id: diff
        run: |
          # Compare PR branch against main
          git fetch origin +refs/heads/main:refs/remotes/origin/main
          git diff --name-only origin/main...HEAD > /tmp/changed.txt
          echo "files<<EOF" >> $GITHUB_OUTPUT
          cat /tmp/changed.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "Changed files:"
          cat /tmp/changed.txt || true

      - name: Block file-based version edits (pyproject.toml)
        if: contains(steps.diff.outputs.files, 'pyproject.toml')
        run: |
          set -euo pipefail
          old=$(git show origin/main:pyproject.toml 2>/dev/null | grep '^version = ' || true)
          new=$(grep '^version = ' pyproject.toml || true)
          if [ -n "$old" ] && [ -n "$new" ] && [ "$old" != "$new" ]; then
            echo "::error::pyproject.toml version changed in PR."
            echo "Versions are tag-derived now. Use auto-bump or bump-version workflows."
            exit 1
          fi
          echo "pyproject.toml present but version line unchanged."

      - name: Block edits to version_registry.json (if present)
        if: contains(steps.diff.outputs.files, 'version_registry.json')
        run: |
          echo "::error::Do not commit changes to version_registry.json."
          echo "If you need a registry artifact, it is generated/uploaded by CI."
          exit 1

      - name: Pass
        run: echo "Version hygiene checks passed."
