name: "Release & Publish"
# "That long train keeps on runnin', down the track of time"

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch: {}

env:
  REGISTRY: docker.io
  IMAGE_NAME: altheasignals/boxofports

jobs:
  version-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    outputs:
      version: ${{ steps.version.outputs.new_version }}
      tag: ${{ steps.version.outputs.tag }}
      
    steps:
    - name: "üåà Checkout the magnificent codebase"
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: "üé≠ Set up Python environment"
      uses: actions/setup-python@v4  
      with:
        python-version: '3.11'
        
    - name: "üì¶ Install dependencies"
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: "üè∑Ô∏è Extract version from tag"
      id: version
      run: |
        # Extract version from Git tag (remove 'v' prefix)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "Building version: $VERSION"
        echo "new_version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$VERSION" >> $GITHUB_OUTPUT
        
    - name: "üèóÔ∏è Build Python package"
      run: python -m build
      
    - name: "üê≥ Set up Docker Buildx"
      uses: docker/setup-buildx-action@v3
      
    - name: "üîë Login to DockerHub"
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: "üè∑Ô∏è Extract metadata for Docker"
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=stable,enable={{is_default_branch}},suffix={{is_major_minor_patch}}
          type=semver,pattern={{version}},value=${{ steps.version.outputs.new_version }}
          
    - name: "üöÄ Build and push Docker image"
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:latest
          ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.new_version }}
          ${{ steps.meta.outputs.tags }}
        labels: |
          version=${{ steps.version.outputs.new_version }}
          org.opencontainers.image.title=BoxOfPorts
          org.opencontainers.image.description=SMS Gateway Management CLI for EJOIN Router Operators
          org.opencontainers.image.vendor=Althea Signals Network LLC
          ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: "üéØ Determine release type"
      id: release_type
      run: |
        VERSION=${{ steps.version.outputs.new_version }}
        if [[ "$VERSION" =~ \.[0-9]+\.0$ ]]; then
          echo "is_stable=true" >> $GITHUB_OUTPUT
          echo "track=stable" >> $GITHUB_OUTPUT
          echo "üéâ This is a stable release: $VERSION"
        else
          echo "is_stable=false" >> $GITHUB_OUTPUT
          echo "track=dev" >> $GITHUB_OUTPUT
          echo "üîÑ This is a development release: $VERSION"
        fi
        
    - name: "üîÑ Update latest tag for dev releases"
      if: steps.release_type.outputs.is_stable == 'false'
      run: |
        docker buildx imagetools create -t ${{ env.IMAGE_NAME }}:latest ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.new_version }}
        echo "üîÑ Updated latest tag to point to development build ${{ steps.version.outputs.new_version }}"
        
        
    - name: "üè∑Ô∏è Create GitHub release"
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        release_name: BoxOfPorts ${{ steps.version.outputs.new_version }}
        body: |
          ## BoxOfPorts ${{ steps.version.outputs.new_version }}
          
          *"The music never stopped playing..."* üéµ
          
          ### What's New
          - Tagged release: ${{ steps.release_type.outputs.track }} track
          - Docker image available: `${{ env.IMAGE_NAME }}:${{ steps.version.outputs.new_version }}`
          
          ### Installation
          
          **Local CLI:**
          ```bash
          pip install ./dist/boxofports-${{ steps.version.outputs.new_version }}-py3-none-any.whl
          ```
          
          **Docker Wrapper:**
          ```bash
          # Download and install boxofports wrapper
          curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/bop -o bop
          chmod +x bop
          sudo mv bop /usr/local/bin/
          ```
          
          ### Usage
          ```bash
          # Local usage
          boxofports --help
          
          # Docker usage (stable track - X.Y.0 versions only)
          bop --help
          
          # Docker usage (development track)
          BOP_RELEASE_TRACK=dev bop --help
          ```
          
          ---
          
          *Built with ‚ù§Ô∏è by Althea Signals Network LLC*
          
        draft: false
        prerelease: ${{ steps.release_type.outputs.is_stable != 'true' }}

