name: publish-on-tag

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

concurrency:
  group: publish-on-tag-${{ github.ref_name }}
  cancel-in-progress: false

env:
  REGISTRY: docker.io
  IMAGE: docker.io/altheasignals/boxofports

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Derive version from tag
        id: ver
        run: |
          raw="${GITHUB_REF_NAME}"     # e.g., v1.2.11
          ver="${raw#v}"               # 1.2.11
          echo "version=$ver" >> $GITHUB_OUTPUT
          echo "minor=${ver%.*}" >> $GITHUB_OUTPUT  # 1.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push multi-arch images
        id: build
        run: |
          V="${{ steps.ver.outputs.version }}"
          M="${{ steps.ver.outputs.minor }}"
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg VERSION="$V" \
            --label org.opencontainers.image.version="$V" \
            --label io.boxofports.version="$V" \
            --label io.boxofports.track="dev" \
            --label io.boxofports.stable="false" \
            -t "${IMAGE}:${V}" \
            -t "${IMAGE}:${M}" \
            --push .

      - name: Find manifest digest for :X.Y.Z
        id: digest
        run: |
          V="${{ steps.ver.outputs.version }}"
          out=$(docker buildx imagetools inspect "${IMAGE}:${V}")
          # Grab the top-level manifest list digest
          digest=$(echo "$out" | sed -n 's/^Name:\s\+\(.*@sha256:[0-9a-f]\+\).*$/\1/p' | head -n1 | awk -F@ '{print $2}')
          if [ -z "$digest" ]; then
            echo "::error::Could not resolve digest for ${IMAGE}:${V}"
            exit 1
          fi
          echo "digest=$digest" >> $GITHUB_OUTPUT
          echo "Resolved digest: $digest"

      - name: Update :latest pointer to this digest
        run: |
          docker buildx imagetools create \
            -t "${IMAGE}:latest" \
            "${IMAGE}@${{ steps.digest.outputs.digest }}"

      - name: Create or update GitHub prerelease
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          prerelease: true
          generate_release_notes: true

      - name: Attach version registry JSON as release asset
        run: |
          V="${{ steps.ver.outputs.version }}"
          cat > version_registry.json <<EOF
          {
            "versions": {
              "development": "${V}"
            },
            "docker": {
              "image_name": "altheasignals/boxofports",
              "tags": { "development": "latest", "stable": "stable" }
            }
          }
          EOF
        shell: bash

      - name: Upload registry asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: version_registry.json
