name: publish-on-tag

on:
  push:
    tags:
      - 'v*.*.*'            # ✅ glob, not regex
  workflow_dispatch:        # ✅ manual recovery path
    inputs:
      tag:
        description: "Tag to publish (e.g., v1.2.15). If empty, uses the current ref tag."
        required: false
      prerelease:
        description: "Mark GitHub Release as prerelease"
        type: choice
        default: "true"
        options: ["true", "false"]

permissions:
  contents: write

concurrency:
  group: publish-on-tag-${{ github.ref || github.event.inputs.tag || 'manual' }}
  cancel-in-progress: false

env:
  IMAGE: docker.io/altheasignals/boxofports

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive version from tag or input
        id: ver
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.tag }}" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${GITHUB_REF_NAME}"
          fi
          case "$TAG" in
            v[0-9]*.[0-9]*.[0-9]*) ;;
            *) echo "::error::Invalid tag '$TAG' (expected vX.Y.Z)"; exit 1 ;;
          esac
          V="${TAG#v}"
          MIN="${V%.*}"
          echo "tag=$TAG"   >> $GITHUB_OUTPUT
          echo "version=$V" >> $GITHUB_OUTPUT
          echo "minor=$MIN" >> $GITHUB_OUTPUT

      - name: Verify DockerHub secrets (fail fast)
        run: |
          test -n "${{ secrets.DOCKERHUB_USERNAME }}" || { echo "::error::Missing DOCKERHUB_USERNAME"; exit 1; }
          test -n "${{ secrets.DOCKERHUB_TOKEN }}"    || { echo "::error::Missing DOCKERHUB_TOKEN"; exit 1; }

      - name: Set metadata
        id: meta
        run: |
          echo "build_date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ steps.ver.outputs.version }}
            ${{ env.IMAGE }}:${{ steps.ver.outputs.minor }}
            ${{ env.IMAGE }}:latest
          build-args: |
            VERSION=${{ steps.ver.outputs.version }}
            BUILD_DATE=${{ steps.meta.outputs.build_date }}
          labels: |
            org.opencontainers.image.version=${{ steps.ver.outputs.version }}
            org.opencontainers.image.created=${{ steps.meta.outputs.build_date }}
            io.boxofports.version=${{ steps.ver.outputs.version }}
            io.boxofports.track=dev
            io.boxofports.stable=false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Inspect pushed manifest (sanity)
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE }}:${{ steps.ver.outputs.version }}

      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.tag }}
          name: ${{ steps.ver.outputs.tag }}
          prerelease: ${{ github.event.inputs.prerelease || 'true' }}
          draft: false
          generate_release_notes: true
